// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  role      String   @default("ADMIN")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

model Location {
  id        String    @id @default(cuid())
  name      String
  slug      String    @unique
  hotels    Hotel[]
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Hotel {
  id          String        @id @default(cuid())
  name        String
  description String?
  locationId  String
  location    Location      @relation(fields: [locationId], references: [id])
  bookings    Booking[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Testimonial Testimonial[]

  @@index([locationId])
}

model Booking {
  id         String        @id @default(cuid())
  checkIn    DateTime
  checkOut   DateTime
  adults     Int
  childrens   Int
  fullName   String
  phoneNo    String
  email      String
  locationId String
  location   Location      @relation(fields: [locationId], references: [id])
  hotelId    String
  hotel      Hotel         @relation(fields: [hotelId], references: [id])
  status     BookingStatus @default(PENDING)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  @@index([locationId])
  @@index([hotelId])
}

model Testimonial {
  id        String   @id @default(cuid())
  name      String
  location  String
  rating    Int
  date      DateTime @default(now())
  hotelId   String
  hotel     Hotel    @relation(fields: [hotelId], references: [id])
  review    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([hotelId])
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}
